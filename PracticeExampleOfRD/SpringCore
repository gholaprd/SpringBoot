Dependancy lookup

when obj gets the req dependancies on its own called DL. If we go the container and ask for an obj then it is DL.
Majority we are avoiding it.

DI
if some external component gives the required dependencies called DI

# Ref store in contined and obj store in JVM.

DI is type of IOC

Weak Hashmap used in storing the value in container
Map<beanId,objRef>

FilePath* never used in WEB APP.

Spring IoC is the mechanism to achieve loose-coupling between Objects dependencies. To achieve loose coupling and dynamic binding of the objects at runtime, 
objects dependencies are injected by other assembler objects.

IOC is not DI.

@Componetscan scan the current package not all present in classpath.

@Component - conveying to the spring to create an obj of class.

Constructor injection depencies are mandatory & final but in SI optional
Taking filed as final of obj then we can say class is immutable. we can change the state of obj creation in CI but SI we can do it.

Autowired field level problem we can't solve and can't mock the obj.

one Obj created per conatiner same obj return from conatiner for that bean called Sigleton. Only one obj across your app.

Prototype- bean def is one but get new obj.
prototype obj not created until the someone requested. create on demand. lazy intialization. destory after usage.container will not held the obj
its like use n throw , intialization lifecycle but not destruction lifecycle for prototype.

1)Only one obj per bean def per container  				Mutliple obj per bean def per conatiner
2)obj gets created during conatiner intialization		obj get creates on demand
3)Every conatiner return same obj						return new obj
4)container hold the ref for singleton obj				not hold the ref
5)obj destoy once container destroy						destroy after usage as part of GC
6)all the lifecycle phase apply							since container not holding the ref so lifecycle phase not apply


singleton: Only one instance of the bean will be created for each container. This is the default scope for the spring beans. While using this scope, 
make sure spring bean doesn’t have shared instance variables otherwise it might lead to data inconsistency issues because it’s not thread-safe.

What is Bean wiring and @Autowired annotation?
The process of injection spring bean dependencies while initializing it called Spring Bean Wiring.

Does Spring Bean provide thread safety?
The default scope of Spring bean is singleton, so there will be only one instance per context. That means that all the having a class level variable 
that any thread can update will lead to inconsistent data. Hence in default mode spring beans are not thread-safe.

However, we can change spring bean scope to request, prototype or session to achieve thread-safety at the cost of performance. 
It’s a design decision and based on the project requirements.

What is a Controller in Spring MVC?
Just like MVC design pattern, Controller is the class that takes care of all the client requests and send them to the configured resources to handle it.
 In Spring MVC, org.springframework.web.servlet.DispatcherServlet is the front controller class that initializes the context based on the spring beans
  configurations.
  
  What is DispatcherServlet and ContextLoaderListener?
DispatcherServlet is the front controller in the Spring MVC application and it loads the spring bean configuration file and initialize all the beans that
 are configured. If annotations are enabled, it also scans the packages and configure any bean annotated with @Component, @Controller, 
 @Repository or @Service annotations.

ContextLoaderListener is the listener to start up and shut down Spring’s root WebApplicationContext. It’s important functions are to tie up the 
lifecycle of ApplicationContext to the lifecycle of the ServletContext and to automate the creation of ApplicationContext. We can use it to define 
shared beans that can be used across different spring contexts.

Can we have multiple Spring configuration files?
For Spring MVC applications, we can define multiple spring context configuration files through contextConfigLocation. This location string can consist 
of multiple locations separated by any number of commas and spaces. 

What is ContextLoaderListener?
ContextLoaderListener is the listener class used to load root context and define spring bean configurations that will be visible to all other contexts. 
It’s configured in web.xml file

How can we use Spring to create Restful Web Service returning JSON response?
By using jackson databing dependancy

Define Bean Wiring.
When beans are combined together within the Spring container, it’s called wiring or bean wiring. The Spring container needs to know what beans are
 needed and how the container should use dependency injection to tie the beans together, while wiring beans.