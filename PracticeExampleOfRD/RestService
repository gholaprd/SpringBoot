#RESTSERVICE#
 =============
 Explain Web Services?

Answer: A Web Service can be defined as an application component for communication or say exchanging information between two applications over the network.
Web services basically work on a client-server model where web services are easily accessible to client applications over the network.

To enable communication between various applications, web services take the help of open standards like XML (for data tagging), 
SOAP (for message transferring) and WSDL (to denote service availability).

What do you know about RESTful Web Services?

Answer: REST stands for Representational State Transfer. REST is defined as the stateless client-server architectural style for developing applications 
accessed over the web.

When web services use HTTP methods to implement the concept of REST architecture, then it is known as RESTful Web services. In this architectural style, 
data and functionality are served as resources and are accessed by URI (Uniform Resource Identifiers).

Explain the advantages of RESTful web services?

Answer: Enlisted below are the advantages of RESTful web services:

They are considered as language and platform-independent as these can be written in any programming language and can be executed on any platform.
REST is a lightweight protocol and is considered as fast because of less consumption of bandwidth and resources.
It supports multiple technologies and different data formats like plain text, XML, JSON, etc.
It has loosely coupled implementation and can be tested easily over browsers.

Difference between SOAP and REST can be easily understood from the below table.

SOAP																		  					REST
Simple Object Access Protocol (SOAP) serves as a standard protocol for web service creation.		Representational State Transfer (REST) is an architectural style for web service creation.
Web services and clients are tightly coupled and define some standards that are to be strictly followed.		It does not follow too many standards and is loosely coupled.
It requires more bandwidth and resource as well as uses service interfaces for exposing business logic.		It requires less bandwidth and resource as well as uses URI (Uniform Resource Identifiers) for exposing business logic.
It is usually less preferred and permits XML data format only.									It is usually more preferred and permits data formats like Plain text, HTML, JSON, etc.
Java API for SOAP web service is JAX-WS.														Java API for RESTFUL web service is JAX-RS.
SOAPUI can be used for testing SOAP web services.													Browsers and extensions such as Chrome postman are used for testing REST web services.
It defines its own security and uses WSDL contract for binding web services and client programs.	It does not have any defined contract as well as does not have its own security methods.

What is Web Service?
The Web Service is a standard software system used for communication between two devices (client and server) over the network. Web services provide a
 common platform for various applications written in different languages to communicate with each other over the network.


Uniform interface
At the core of REST are resources, and resources are identified using Uniform Resource Identifiers (URIs).

Client-Server
The client-server model that REST embraces enables the separation of client concerns, such as user interaction or user state management, from that of 
server concerns such as data storage and scalability.

Stateless
REST advocates statelessness. No client state is stored on the server. All the information needed to perform operations is contained in the requests 
(as part of the URL, request body, or as HTTP headers).

Cacheable
RESTful web services must provide caching capabilities. Servers can indicate how and for how long to cache responses. Clients can use cached responses 
instead of contacting the server.

 
 RESTful web services use web protocol i.e. HTTP protocol method. They have the feature like scalability, maintainability, help multiple application 
 communication built on various programming languages, etc.
 The important aspects of this implementation include:

Resources
Request Headers
Request Body
Response Body
Status codes

Name the protocol which is used by RESTful web services.

Answer: RESTful web services use a famous web protocol i.e. HTTP protocol. This serves as a medium of data communication between client and server. 
HTTP standard methods are used to access resources in RESTful web service architecture.


What are the core components of the HTTP request and HTTP response?

Answer: The core components under HTTP Request are:

Verb: Includes methods like GET, PUT, POST, etc.
Uniform Resource Identifier for identifying the resources available on the server.
HTTP Version for specifying the HTTP version.
HTTP Request header for containing the information about the data.
HTTP Request body that contains the representation of the resources in use.
The core components under HTTP Response are:

Request Code: This contains various codes that determine the status of the server response.
HTTP Version for specifying the HTTP version.
HTTP Response header for containing the information about the data.
HTTP Response body that contains the representation of the resources in use.

What is a ‘Resource’?

Answer: Just like the ‘Object’ instance, we have learned in Object Orient Programming Language, in the same way, ‘Resource’ is defined as an object of a 
type which can be an image, HTML file, text data, and any type of dynamic data. There are varieties of representation formats available in order to
 represent a resource.

Some most common Resources are enlisted below:

JSON
YAML
XML
HTML

What is Payload?

Answer: The request data which is present in the body part of every HTTP message is referred to as ‘Payload’.  In Restful web service, the payload can 
only be passed to the recipient through the POST method.

What is the difference between the PUT method and the POST method?

Answer: The major difference between the PUT and POST method is that the result generated with the PUT method is always the same no matter how many times 
the operation is performed. On the other hand, the result generated by POST operation is always different every time.

What HTTP Status Code 200 states?
It means, OK, shows success.

What HTTP Status Code 201 states?
It means, CREATED, when a resource is successful created using POST or PUT request. Return link to newly created resource using location header.

What HTTP Status Code 204 states?
It means, NO CONTENT, when response body is empty for example, a DELETE request.

What HTTP Status Code 304 states?
It means, NOT MODIFIED, used to reduce network bandwidth usage in case of conditional GET requests. Response body should be empty. Headers should have date, location etc.

What HTTP Status Code 400 states?
It means, BAD REQUEST, states that invalid input is provided e.g. validation error, missing data.

What HTTP Status Code 401 states?
It means, FORBIDDEN, states that user is not having access to method being used for example, delete access without admin rights.

What HTTP Status Code 404 states?
It means, NOT FOUND, states that method is not available.

What HTTP Status Code 409 states?
It means, CONFLICT, states conflict situation while executing the method for example, adding duplicate entry.

What is the difference between SOAP and REST web services?
No.	SOAP	REST
1)	SOAP is a protocol.	REST is an architectural style.
2)	SOAP stands for Simple Object Access Protocol.	REST stands for Representational State Transfer.
3)	SOAP can't use REST because it is a protocol.	REST can use SOAP web services because it is a concept and can use any protocol like HTTP, SOAP.
4)	SOAP uses services interfaces to expose the business logic.	REST uses URI to expose business logic.
5)	SOAP defines standards to be strictly followed.	REST does not define too much standards like SOAP.
6)	SOAP permits XML data format only.	REST permits different data format such as Plain text, HTML, XML, JSON.

"PUT" puts a file or resource at a particular URI and exactly at that URI. If there is already a file or resource at that URI, PUT changes that file or 
resource. If there is no resource or file there, PUT makes one

POST sends data to a particular URI and expects the resource at that URI to deal with the request. The web server at this point can decide what to do 
with the data in the context of specified resource

PUT is idempotent meaning, invoking it any number of times will not have an impact on resources.

However, POST is not idempotent, meaning if you invoke POST multiple times it keeps creating more resources

What is the HTTP status return code for a successful DELETE statement? (answer)
There is no strict rule with respect to what status code your REST API should return after a successful DELETE i.e it can return 200 Ok or 204 No Content. 
In general, if the DELETE operation is successful and the response body is empty return 204. If the DELETE request is successful and the 
response body is NOT empty, return 200